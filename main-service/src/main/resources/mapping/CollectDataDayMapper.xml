<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xhkj.server.energy.dao.mybatis.mapper.CollectDataDayMapper">
  <resultMap id="BaseResultMap" type="com.xhkj.server.energy.dao.mybatis.vo.CollectDataDay">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="ID" jdbcType="INTEGER" property="id" />
    <result column="COMPANY_ID" jdbcType="INTEGER" property="companyId" />
    <result column="STAND_ID" jdbcType="VARCHAR" property="standId" />
    <result column="STATION_ID" jdbcType="VARCHAR" property="stationId" />
    <result column="GROUP_ID" jdbcType="VARCHAR" property="groupId" />
    <result column="OP_TIME" jdbcType="TIMESTAMP" property="opTime" />
    <result column="PT1" jdbcType="REAL" property="pt1" />
    <result column="PT2" jdbcType="REAL" property="pt2" />
    <result column="TE1" jdbcType="REAL" property="te1" />
    <result column="TE2" jdbcType="REAL" property="te2" />
    <result column="CVI1" jdbcType="REAL" property="cvi1" />
    <result column="QI" jdbcType="REAL" property="qi" />
    <result column="FT1" jdbcType="REAL" property="ft1" />
    <result column="FT1Q" jdbcType="REAL" property="ft1q" />
    <result column="PT3" jdbcType="REAL" property="pt3" />
    <result column="PT4" jdbcType="REAL" property="pt4" />
    <result column="TE3" jdbcType="REAL" property="te3" />
    <result column="TE4" jdbcType="REAL" property="te4" />
    <result column="FT2" jdbcType="REAL" property="ft2" />
    <result column="FT3" jdbcType="REAL" property="ft3" />
    <result column="FC1V1" jdbcType="REAL" property="fc1v1" />
    <result column="LT1" jdbcType="REAL" property="lt1" />
    <result column="QQI" jdbcType="REAL" property="qqi" />
    <result column="JQI" jdbcType="REAL" property="jqi" />
    <result column="FT3Q" jdbcType="REAL" property="ft3q" />
    <result column="FT2Q" jdbcType="REAL" property="ft2q" />
    <result column="FT3Q_PRICE" jdbcType="REAL" property="ft3qPrice" />
    <result column="JQI_PRICE" jdbcType="REAL" property="jqiPrice" />
    <result column="QQI_PRICE" jdbcType="REAL" property="qqiPrice" />
    <result column="QQI_TOTAL" jdbcType="REAL" property="qqiTotal" />
    <result column="JQI_TOTAL" jdbcType="REAL" property="jqiTotal" />
    <result column="FT3Q_TOTAL" jdbcType="REAL" property="ft3qTotal" />
    <result column="DT" jdbcType="DATE" property="dt" />
    <result column="type" jdbcType="INTEGER" property="type" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    ID, COMPANY_ID, STAND_ID, STATION_ID, GROUP_ID, OP_TIME, PT1, PT2, TE1, TE2, CVI1, 
    QI, FT1, FT1Q, PT3, PT4, TE3, TE4, FT2, FT3, FC1V1, LT1, QQI, JQI, FT3Q, FT2Q, FT3Q_PRICE, 
    JQI_PRICE, QQI_PRICE, QQI_TOTAL, JQI_TOTAL, FT3Q_TOTAL, DT, type
  </sql>
  <select id="selectByExample" parameterType="com.xhkj.server.energy.dao.mybatis.vo.CollectDataDayExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from data_collect_day
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    from data_collect_day
    where ID = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from data_collect_day
    where ID = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.xhkj.server.energy.dao.mybatis.vo.CollectDataDayExample">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from data_collect_day
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.xhkj.server.energy.dao.mybatis.vo.CollectDataDay">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into data_collect_day (COMPANY_ID, STAND_ID, STATION_ID, 
      GROUP_ID, OP_TIME, PT1, 
      PT2, TE1, TE2, CVI1, 
      QI, FT1, FT1Q, PT3, 
      PT4, TE3, TE4, FT2, 
      FT3, FC1V1, LT1, QQI, 
      JQI, FT3Q, FT2Q, FT3Q_PRICE, 
      JQI_PRICE, QQI_PRICE, QQI_TOTAL, 
      JQI_TOTAL, FT3Q_TOTAL, DT, type
      )
    values (#{companyId,jdbcType=INTEGER}, #{standId,jdbcType=VARCHAR}, #{stationId,jdbcType=VARCHAR}, 
      #{groupId,jdbcType=VARCHAR}, #{opTime,jdbcType=TIMESTAMP}, #{pt1,jdbcType=REAL}, 
      #{pt2,jdbcType=REAL}, #{te1,jdbcType=REAL}, #{te2,jdbcType=REAL}, #{cvi1,jdbcType=REAL}, 
      #{qi,jdbcType=REAL}, #{ft1,jdbcType=REAL}, #{ft1q,jdbcType=REAL}, #{pt3,jdbcType=REAL}, 
      #{pt4,jdbcType=REAL}, #{te3,jdbcType=REAL}, #{te4,jdbcType=REAL}, #{ft2,jdbcType=REAL}, 
      #{ft3,jdbcType=REAL}, #{fc1v1,jdbcType=REAL}, #{lt1,jdbcType=REAL}, #{qqi,jdbcType=REAL}, 
      #{jqi,jdbcType=REAL}, #{ft3q,jdbcType=REAL}, #{ft2q,jdbcType=REAL}, #{ft3qPrice,jdbcType=REAL}, 
      #{jqiPrice,jdbcType=REAL}, #{qqiPrice,jdbcType=REAL}, #{qqiTotal,jdbcType=REAL}, 
      #{jqiTotal,jdbcType=REAL}, #{ft3qTotal,jdbcType=REAL}, #{dt,jdbcType=DATE}, #{type,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.xhkj.server.energy.dao.mybatis.vo.CollectDataDay">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into data_collect_day
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="companyId != null">
        COMPANY_ID,
      </if>
      <if test="standId != null">
        STAND_ID,
      </if>
      <if test="stationId != null">
        STATION_ID,
      </if>
      <if test="groupId != null">
        GROUP_ID,
      </if>
      <if test="opTime != null">
        OP_TIME,
      </if>
      <if test="pt1 != null">
        PT1,
      </if>
      <if test="pt2 != null">
        PT2,
      </if>
      <if test="te1 != null">
        TE1,
      </if>
      <if test="te2 != null">
        TE2,
      </if>
      <if test="cvi1 != null">
        CVI1,
      </if>
      <if test="qi != null">
        QI,
      </if>
      <if test="ft1 != null">
        FT1,
      </if>
      <if test="ft1q != null">
        FT1Q,
      </if>
      <if test="pt3 != null">
        PT3,
      </if>
      <if test="pt4 != null">
        PT4,
      </if>
      <if test="te3 != null">
        TE3,
      </if>
      <if test="te4 != null">
        TE4,
      </if>
      <if test="ft2 != null">
        FT2,
      </if>
      <if test="ft3 != null">
        FT3,
      </if>
      <if test="fc1v1 != null">
        FC1V1,
      </if>
      <if test="lt1 != null">
        LT1,
      </if>
      <if test="qqi != null">
        QQI,
      </if>
      <if test="jqi != null">
        JQI,
      </if>
      <if test="ft3q != null">
        FT3Q,
      </if>
      <if test="ft2q != null">
        FT2Q,
      </if>
      <if test="ft3qPrice != null">
        FT3Q_PRICE,
      </if>
      <if test="jqiPrice != null">
        JQI_PRICE,
      </if>
      <if test="qqiPrice != null">
        QQI_PRICE,
      </if>
      <if test="qqiTotal != null">
        QQI_TOTAL,
      </if>
      <if test="jqiTotal != null">
        JQI_TOTAL,
      </if>
      <if test="ft3qTotal != null">
        FT3Q_TOTAL,
      </if>
      <if test="dt != null">
        DT,
      </if>
      <if test="type != null">
        type,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="companyId != null">
        #{companyId,jdbcType=INTEGER},
      </if>
      <if test="standId != null">
        #{standId,jdbcType=VARCHAR},
      </if>
      <if test="stationId != null">
        #{stationId,jdbcType=VARCHAR},
      </if>
      <if test="groupId != null">
        #{groupId,jdbcType=VARCHAR},
      </if>
      <if test="opTime != null">
        #{opTime,jdbcType=TIMESTAMP},
      </if>
      <if test="pt1 != null">
        #{pt1,jdbcType=REAL},
      </if>
      <if test="pt2 != null">
        #{pt2,jdbcType=REAL},
      </if>
      <if test="te1 != null">
        #{te1,jdbcType=REAL},
      </if>
      <if test="te2 != null">
        #{te2,jdbcType=REAL},
      </if>
      <if test="cvi1 != null">
        #{cvi1,jdbcType=REAL},
      </if>
      <if test="qi != null">
        #{qi,jdbcType=REAL},
      </if>
      <if test="ft1 != null">
        #{ft1,jdbcType=REAL},
      </if>
      <if test="ft1q != null">
        #{ft1q,jdbcType=REAL},
      </if>
      <if test="pt3 != null">
        #{pt3,jdbcType=REAL},
      </if>
      <if test="pt4 != null">
        #{pt4,jdbcType=REAL},
      </if>
      <if test="te3 != null">
        #{te3,jdbcType=REAL},
      </if>
      <if test="te4 != null">
        #{te4,jdbcType=REAL},
      </if>
      <if test="ft2 != null">
        #{ft2,jdbcType=REAL},
      </if>
      <if test="ft3 != null">
        #{ft3,jdbcType=REAL},
      </if>
      <if test="fc1v1 != null">
        #{fc1v1,jdbcType=REAL},
      </if>
      <if test="lt1 != null">
        #{lt1,jdbcType=REAL},
      </if>
      <if test="qqi != null">
        #{qqi,jdbcType=REAL},
      </if>
      <if test="jqi != null">
        #{jqi,jdbcType=REAL},
      </if>
      <if test="ft3q != null">
        #{ft3q,jdbcType=REAL},
      </if>
      <if test="ft2q != null">
        #{ft2q,jdbcType=REAL},
      </if>
      <if test="ft3qPrice != null">
        #{ft3qPrice,jdbcType=REAL},
      </if>
      <if test="jqiPrice != null">
        #{jqiPrice,jdbcType=REAL},
      </if>
      <if test="qqiPrice != null">
        #{qqiPrice,jdbcType=REAL},
      </if>
      <if test="qqiTotal != null">
        #{qqiTotal,jdbcType=REAL},
      </if>
      <if test="jqiTotal != null">
        #{jqiTotal,jdbcType=REAL},
      </if>
      <if test="ft3qTotal != null">
        #{ft3qTotal,jdbcType=REAL},
      </if>
      <if test="dt != null">
        #{dt,jdbcType=DATE},
      </if>
      <if test="type != null">
        #{type,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.xhkj.server.energy.dao.mybatis.vo.CollectDataDayExample" resultType="java.lang.Long">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select count(*) from data_collect_day
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update data_collect_day
    <set>
      <if test="record.id != null">
        ID = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.companyId != null">
        COMPANY_ID = #{record.companyId,jdbcType=INTEGER},
      </if>
      <if test="record.standId != null">
        STAND_ID = #{record.standId,jdbcType=VARCHAR},
      </if>
      <if test="record.stationId != null">
        STATION_ID = #{record.stationId,jdbcType=VARCHAR},
      </if>
      <if test="record.groupId != null">
        GROUP_ID = #{record.groupId,jdbcType=VARCHAR},
      </if>
      <if test="record.opTime != null">
        OP_TIME = #{record.opTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.pt1 != null">
        PT1 = #{record.pt1,jdbcType=REAL},
      </if>
      <if test="record.pt2 != null">
        PT2 = #{record.pt2,jdbcType=REAL},
      </if>
      <if test="record.te1 != null">
        TE1 = #{record.te1,jdbcType=REAL},
      </if>
      <if test="record.te2 != null">
        TE2 = #{record.te2,jdbcType=REAL},
      </if>
      <if test="record.cvi1 != null">
        CVI1 = #{record.cvi1,jdbcType=REAL},
      </if>
      <if test="record.qi != null">
        QI = #{record.qi,jdbcType=REAL},
      </if>
      <if test="record.ft1 != null">
        FT1 = #{record.ft1,jdbcType=REAL},
      </if>
      <if test="record.ft1q != null">
        FT1Q = #{record.ft1q,jdbcType=REAL},
      </if>
      <if test="record.pt3 != null">
        PT3 = #{record.pt3,jdbcType=REAL},
      </if>
      <if test="record.pt4 != null">
        PT4 = #{record.pt4,jdbcType=REAL},
      </if>
      <if test="record.te3 != null">
        TE3 = #{record.te3,jdbcType=REAL},
      </if>
      <if test="record.te4 != null">
        TE4 = #{record.te4,jdbcType=REAL},
      </if>
      <if test="record.ft2 != null">
        FT2 = #{record.ft2,jdbcType=REAL},
      </if>
      <if test="record.ft3 != null">
        FT3 = #{record.ft3,jdbcType=REAL},
      </if>
      <if test="record.fc1v1 != null">
        FC1V1 = #{record.fc1v1,jdbcType=REAL},
      </if>
      <if test="record.lt1 != null">
        LT1 = #{record.lt1,jdbcType=REAL},
      </if>
      <if test="record.qqi != null">
        QQI = #{record.qqi,jdbcType=REAL},
      </if>
      <if test="record.jqi != null">
        JQI = #{record.jqi,jdbcType=REAL},
      </if>
      <if test="record.ft3q != null">
        FT3Q = #{record.ft3q,jdbcType=REAL},
      </if>
      <if test="record.ft2q != null">
        FT2Q = #{record.ft2q,jdbcType=REAL},
      </if>
      <if test="record.ft3qPrice != null">
        FT3Q_PRICE = #{record.ft3qPrice,jdbcType=REAL},
      </if>
      <if test="record.jqiPrice != null">
        JQI_PRICE = #{record.jqiPrice,jdbcType=REAL},
      </if>
      <if test="record.qqiPrice != null">
        QQI_PRICE = #{record.qqiPrice,jdbcType=REAL},
      </if>
      <if test="record.qqiTotal != null">
        QQI_TOTAL = #{record.qqiTotal,jdbcType=REAL},
      </if>
      <if test="record.jqiTotal != null">
        JQI_TOTAL = #{record.jqiTotal,jdbcType=REAL},
      </if>
      <if test="record.ft3qTotal != null">
        FT3Q_TOTAL = #{record.ft3qTotal,jdbcType=REAL},
      </if>
      <if test="record.dt != null">
        DT = #{record.dt,jdbcType=DATE},
      </if>
      <if test="record.type != null">
        type = #{record.type,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update data_collect_day
    set ID = #{record.id,jdbcType=INTEGER},
      COMPANY_ID = #{record.companyId,jdbcType=INTEGER},
      STAND_ID = #{record.standId,jdbcType=VARCHAR},
      STATION_ID = #{record.stationId,jdbcType=VARCHAR},
      GROUP_ID = #{record.groupId,jdbcType=VARCHAR},
      OP_TIME = #{record.opTime,jdbcType=TIMESTAMP},
      PT1 = #{record.pt1,jdbcType=REAL},
      PT2 = #{record.pt2,jdbcType=REAL},
      TE1 = #{record.te1,jdbcType=REAL},
      TE2 = #{record.te2,jdbcType=REAL},
      CVI1 = #{record.cvi1,jdbcType=REAL},
      QI = #{record.qi,jdbcType=REAL},
      FT1 = #{record.ft1,jdbcType=REAL},
      FT1Q = #{record.ft1q,jdbcType=REAL},
      PT3 = #{record.pt3,jdbcType=REAL},
      PT4 = #{record.pt4,jdbcType=REAL},
      TE3 = #{record.te3,jdbcType=REAL},
      TE4 = #{record.te4,jdbcType=REAL},
      FT2 = #{record.ft2,jdbcType=REAL},
      FT3 = #{record.ft3,jdbcType=REAL},
      FC1V1 = #{record.fc1v1,jdbcType=REAL},
      LT1 = #{record.lt1,jdbcType=REAL},
      QQI = #{record.qqi,jdbcType=REAL},
      JQI = #{record.jqi,jdbcType=REAL},
      FT3Q = #{record.ft3q,jdbcType=REAL},
      FT2Q = #{record.ft2q,jdbcType=REAL},
      FT3Q_PRICE = #{record.ft3qPrice,jdbcType=REAL},
      JQI_PRICE = #{record.jqiPrice,jdbcType=REAL},
      QQI_PRICE = #{record.qqiPrice,jdbcType=REAL},
      QQI_TOTAL = #{record.qqiTotal,jdbcType=REAL},
      JQI_TOTAL = #{record.jqiTotal,jdbcType=REAL},
      FT3Q_TOTAL = #{record.ft3qTotal,jdbcType=REAL},
      DT = #{record.dt,jdbcType=DATE},
      type = #{record.type,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.xhkj.server.energy.dao.mybatis.vo.CollectDataDay">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update data_collect_day
    <set>
      <if test="companyId != null">
        COMPANY_ID = #{companyId,jdbcType=INTEGER},
      </if>
      <if test="standId != null">
        STAND_ID = #{standId,jdbcType=VARCHAR},
      </if>
      <if test="stationId != null">
        STATION_ID = #{stationId,jdbcType=VARCHAR},
      </if>
      <if test="groupId != null">
        GROUP_ID = #{groupId,jdbcType=VARCHAR},
      </if>
      <if test="opTime != null">
        OP_TIME = #{opTime,jdbcType=TIMESTAMP},
      </if>
      <if test="pt1 != null">
        PT1 = #{pt1,jdbcType=REAL},
      </if>
      <if test="pt2 != null">
        PT2 = #{pt2,jdbcType=REAL},
      </if>
      <if test="te1 != null">
        TE1 = #{te1,jdbcType=REAL},
      </if>
      <if test="te2 != null">
        TE2 = #{te2,jdbcType=REAL},
      </if>
      <if test="cvi1 != null">
        CVI1 = #{cvi1,jdbcType=REAL},
      </if>
      <if test="qi != null">
        QI = #{qi,jdbcType=REAL},
      </if>
      <if test="ft1 != null">
        FT1 = #{ft1,jdbcType=REAL},
      </if>
      <if test="ft1q != null">
        FT1Q = #{ft1q,jdbcType=REAL},
      </if>
      <if test="pt3 != null">
        PT3 = #{pt3,jdbcType=REAL},
      </if>
      <if test="pt4 != null">
        PT4 = #{pt4,jdbcType=REAL},
      </if>
      <if test="te3 != null">
        TE3 = #{te3,jdbcType=REAL},
      </if>
      <if test="te4 != null">
        TE4 = #{te4,jdbcType=REAL},
      </if>
      <if test="ft2 != null">
        FT2 = #{ft2,jdbcType=REAL},
      </if>
      <if test="ft3 != null">
        FT3 = #{ft3,jdbcType=REAL},
      </if>
      <if test="fc1v1 != null">
        FC1V1 = #{fc1v1,jdbcType=REAL},
      </if>
      <if test="lt1 != null">
        LT1 = #{lt1,jdbcType=REAL},
      </if>
      <if test="qqi != null">
        QQI = #{qqi,jdbcType=REAL},
      </if>
      <if test="jqi != null">
        JQI = #{jqi,jdbcType=REAL},
      </if>
      <if test="ft3q != null">
        FT3Q = #{ft3q,jdbcType=REAL},
      </if>
      <if test="ft2q != null">
        FT2Q = #{ft2q,jdbcType=REAL},
      </if>
      <if test="ft3qPrice != null">
        FT3Q_PRICE = #{ft3qPrice,jdbcType=REAL},
      </if>
      <if test="jqiPrice != null">
        JQI_PRICE = #{jqiPrice,jdbcType=REAL},
      </if>
      <if test="qqiPrice != null">
        QQI_PRICE = #{qqiPrice,jdbcType=REAL},
      </if>
      <if test="qqiTotal != null">
        QQI_TOTAL = #{qqiTotal,jdbcType=REAL},
      </if>
      <if test="jqiTotal != null">
        JQI_TOTAL = #{jqiTotal,jdbcType=REAL},
      </if>
      <if test="ft3qTotal != null">
        FT3Q_TOTAL = #{ft3qTotal,jdbcType=REAL},
      </if>
      <if test="dt != null">
        DT = #{dt,jdbcType=DATE},
      </if>
      <if test="type != null">
        type = #{type,jdbcType=INTEGER},
      </if>
    </set>
    where ID = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.xhkj.server.energy.dao.mybatis.vo.CollectDataDay">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update data_collect_day
    set COMPANY_ID = #{companyId,jdbcType=INTEGER},
      STAND_ID = #{standId,jdbcType=VARCHAR},
      STATION_ID = #{stationId,jdbcType=VARCHAR},
      GROUP_ID = #{groupId,jdbcType=VARCHAR},
      OP_TIME = #{opTime,jdbcType=TIMESTAMP},
      PT1 = #{pt1,jdbcType=REAL},
      PT2 = #{pt2,jdbcType=REAL},
      TE1 = #{te1,jdbcType=REAL},
      TE2 = #{te2,jdbcType=REAL},
      CVI1 = #{cvi1,jdbcType=REAL},
      QI = #{qi,jdbcType=REAL},
      FT1 = #{ft1,jdbcType=REAL},
      FT1Q = #{ft1q,jdbcType=REAL},
      PT3 = #{pt3,jdbcType=REAL},
      PT4 = #{pt4,jdbcType=REAL},
      TE3 = #{te3,jdbcType=REAL},
      TE4 = #{te4,jdbcType=REAL},
      FT2 = #{ft2,jdbcType=REAL},
      FT3 = #{ft3,jdbcType=REAL},
      FC1V1 = #{fc1v1,jdbcType=REAL},
      LT1 = #{lt1,jdbcType=REAL},
      QQI = #{qqi,jdbcType=REAL},
      JQI = #{jqi,jdbcType=REAL},
      FT3Q = #{ft3q,jdbcType=REAL},
      FT2Q = #{ft2q,jdbcType=REAL},
      FT3Q_PRICE = #{ft3qPrice,jdbcType=REAL},
      JQI_PRICE = #{jqiPrice,jdbcType=REAL},
      QQI_PRICE = #{qqiPrice,jdbcType=REAL},
      QQI_TOTAL = #{qqiTotal,jdbcType=REAL},
      JQI_TOTAL = #{jqiTotal,jdbcType=REAL},
      FT3Q_TOTAL = #{ft3qTotal,jdbcType=REAL},
      DT = #{dt,jdbcType=DATE},
      type = #{type,jdbcType=INTEGER}
    where ID = #{id,jdbcType=INTEGER}
  </update>
  <!-- 分页sql -->
  <sql id="pageWhere">
    <if test="limit != null and limit != '' ">limit #{offset},#{limit}</if>
  </sql>
  <!-- 水耗分析 -->
  <select id="getAnalysisWater" parameterType="com.xhkj.server.energy.page.Page" resultType="Map">
    SELECT
    d.station_id,d.stand_id, s.station_name, t.stand_name, sum(t.real_area) as real_area, ft3q, SUM(FT3Q_TOTAL) as
    ft3q_total,dt,op_time
    FROM
    data_collect_day d
    INNER JOIN
    data_station s ON d.station_id =s.station_id and d.company_id =s.company_id
    INNER JOIN
    data_stand t ON t.stand_id = d.stand_id and d.company_id =s.company_id
    <where>
      type=0 and dt &gt;=#{params.beginTime} and dt &lt;=#{params.endTime} and d.company_id = #{params.companyId}
      <if test="params.standName!=null and params.standName!=''">
        and t.stand_name like concat('%',REPLACE(#{params.standName},'_','\_'),'%')
      </if>
    </where>
    group by d.stand_id
    order by MID(d.STATION_ID,2,2)+1,MID(d.STAND_ID,2,2)
    <include refid="pageWhere"></include>
  </select>
  <!-- 电耗分析 -->
  <select id="getAnalysisElectricity" parameterType="com.xhkj.server.energy.page.Page" resultType="Map">
    SELECT
    d.station_id, s.station_name, sum(t.real_area) as real_area, sum(jqi_total) as jqi_total,op_time
    FROM
    data_collect_day d
    INNER JOIN
    data_station s ON d.station_id =s.station_id and d.company_id =s.company_id
    INNER JOIN
    data_stand t ON t.stand_id = d.stand_id and d.company_id =s.company_id
    <where>
      type=0 and dt &gt;=#{params.beginTime} and dt &lt;=#{params.endTime} and d.company_id = #{params.companyId}
      <if test="params.stationName!=null and params.stationName!=''">
        and s.station_name like concat('%',REPLACE(#{params.stationName},'_','\_'),'%')
      </if>
    </where>
    group by s.station_id, s.station_name
    order by MID(d.STATION_ID,2,2)+1,MID(d.STAND_ID,2,2)
    <include refid="pageWhere"></include>
  </select>
  <!-- 热耗分析 -->
  <select id="getAnalysisHeat" parameterType="com.xhkj.server.energy.page.Page" resultType="Map">
    SELECT
    d.station_id, s.station_name, sum(t.real_area) as real_area, sum(qqi_total) as qqi_total,op_time
    FROM
    data_collect_day d
    INNER JOIN
    data_station s ON d.station_id =s.station_id and d.company_id =s.company_id
    INNER JOIN
    data_stand t ON t.stand_id = d.stand_id and d.company_id =s.company_id
    <where>
      type=0 and dt &gt;=#{params.beginTime} and dt &lt;=#{params.endTime} and d.company_id = #{params.companyId}
      <if test="params.stationName!=null and params.stationName!=''">
        and s.station_name like concat('%',REPLACE(#{params.stationName},'_','\_'),'%')
      </if>
    </where>
    group by s.station_id, s.station_name
    order by MID(d.STATION_ID,2,2)+1,MID(d.STAND_ID,2,2)
    <include refid="pageWhere"></include>
  </select>
  <!-- 热耗汇总 -->
  <select id="getTotalHeat" parameterType="java.util.Date" resultType="java.lang.Float">
    SELECT sum(qqi_total)
    FROM data_collect_day
    where DT = #{date}
      and qqi_total > 0
  </select>
  <select id="getDataEconByDateTime" parameterType="com.xhkj.server.energy.page.Page" resultType="Map">
    SELECT
    s.station_id,
    s.station_name,
    sum(t.design_area) as sum_design_area,
    sum(t.real_area) as sum_real_area,
    sum(d.ft3q) as sum_ft3q,
    sum(d.qqi) as sum_qqi,
    sum(d.jqi) as sum_jqi,
    sum(d.ft3q * d.ft3q_price) as sum_ft3q_price,
    sum(d.qqi * d.qqi_price) as sum_qqi_price,
    sum(d.jqi * d.jqi_price) as sum_jqi_price,
    sum(d.ft3q * d.ft3q_price+d.qqi * d.qqi_price+d.jqi * d.jqi_price) as price_total
    FROM
    data_collect_day d
    INNER JOIN
    data_station s on d.station_id = s.station_id and d.company_id = s.company_id
    INNER JOIN
    data_stand t on t.stand_id = d.stand_id and t.company_id = d.company_id
    <where>
      d.company_id = #{params.company_id}
      <if test="params.type!=null">
        and type=#{params.type}
      </if>
      <if test="params.beginDt!=null and params.beginDt!=''">
        and dt &gt;=#{params.beginDt}
      </if>
      <if test="params.endDt!=null and params.endDt!=''">
        and dt &lt;=#{params.endDt}
      </if>
      <if test="params.stationName!=null and params.stationName!=''">
        and s.station_name like concat('%',REPLACE(#{params.stationName},'_','\_'),'%')
      </if>
    </where>
    GROUP BY d.station_id
    order by MID(d.STATION_ID,2,2)+1
    <include refid="pageWhere"/>
  </select>
</mapper>