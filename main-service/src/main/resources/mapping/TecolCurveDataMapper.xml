<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xhkj.server.energy.dao.mybatis.mapper.TecolCurveDataMapper">
  <resultMap id="BaseResultMap" type="com.xhkj.server.energy.dao.mybatis.vo.TecolCurveData">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="temperature" jdbcType="SMALLINT" property="temperature" />
    <result column="TE1" jdbcType="REAL" property="te1" />
    <result column="TE2" jdbcType="REAL" property="te2" />
    <result column="TE3" jdbcType="REAL" property="te3" />
    <result column="TE4" jdbcType="REAL" property="te4" />
    <result column="TAG" jdbcType="BIT" property="tag" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    temperature, TE1, TE2, TE3, TE4, TAG
  </sql>
  <select id="selectByExample" parameterType="com.xhkj.server.energy.dao.mybatis.vo.TecolCurveDataExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from data_tecol_curve
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Short" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    from data_tecol_curve
    where temperature = #{temperature,jdbcType=SMALLINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Short">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from data_tecol_curve
    where temperature = #{temperature,jdbcType=SMALLINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.xhkj.server.energy.dao.mybatis.vo.TecolCurveDataExample">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from data_tecol_curve
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.xhkj.server.energy.dao.mybatis.vo.TecolCurveData">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into data_tecol_curve (temperature, TE1, TE2, 
      TE3, TE4, TAG)
    values (#{temperature,jdbcType=SMALLINT}, #{te1,jdbcType=REAL}, #{te2,jdbcType=REAL}, 
      #{te3,jdbcType=REAL}, #{te4,jdbcType=REAL}, #{tag,jdbcType=BIT})
  </insert>
  <insert id="insertSelective" parameterType="com.xhkj.server.energy.dao.mybatis.vo.TecolCurveData">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into data_tecol_curve
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="temperature != null">
        temperature,
      </if>
      <if test="te1 != null">
        TE1,
      </if>
      <if test="te2 != null">
        TE2,
      </if>
      <if test="te3 != null">
        TE3,
      </if>
      <if test="te4 != null">
        TE4,
      </if>
      <if test="tag != null">
        TAG,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="temperature != null">
        #{temperature,jdbcType=SMALLINT},
      </if>
      <if test="te1 != null">
        #{te1,jdbcType=REAL},
      </if>
      <if test="te2 != null">
        #{te2,jdbcType=REAL},
      </if>
      <if test="te3 != null">
        #{te3,jdbcType=REAL},
      </if>
      <if test="te4 != null">
        #{te4,jdbcType=REAL},
      </if>
      <if test="tag != null">
        #{tag,jdbcType=BIT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.xhkj.server.energy.dao.mybatis.vo.TecolCurveDataExample" resultType="java.lang.Long">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select count(*) from data_tecol_curve
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update data_tecol_curve
    <set>
      <if test="record.temperature != null">
        temperature = #{record.temperature,jdbcType=SMALLINT},
      </if>
      <if test="record.te1 != null">
        TE1 = #{record.te1,jdbcType=REAL},
      </if>
      <if test="record.te2 != null">
        TE2 = #{record.te2,jdbcType=REAL},
      </if>
      <if test="record.te3 != null">
        TE3 = #{record.te3,jdbcType=REAL},
      </if>
      <if test="record.te4 != null">
        TE4 = #{record.te4,jdbcType=REAL},
      </if>
      <if test="record.tag != null">
        TAG = #{record.tag,jdbcType=BIT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update data_tecol_curve
    set temperature = #{record.temperature,jdbcType=SMALLINT},
      TE1 = #{record.te1,jdbcType=REAL},
      TE2 = #{record.te2,jdbcType=REAL},
      TE3 = #{record.te3,jdbcType=REAL},
      TE4 = #{record.te4,jdbcType=REAL},
      TAG = #{record.tag,jdbcType=BIT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.xhkj.server.energy.dao.mybatis.vo.TecolCurveData">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update data_tecol_curve
    <set>
      <if test="te1 != null">
        TE1 = #{te1,jdbcType=REAL},
      </if>
      <if test="te2 != null">
        TE2 = #{te2,jdbcType=REAL},
      </if>
      <if test="te3 != null">
        TE3 = #{te3,jdbcType=REAL},
      </if>
      <if test="te4 != null">
        TE4 = #{te4,jdbcType=REAL},
      </if>
      <if test="tag != null">
        TAG = #{tag,jdbcType=BIT},
      </if>
    </set>
    where temperature = #{temperature,jdbcType=SMALLINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.xhkj.server.energy.dao.mybatis.vo.TecolCurveData">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update data_tecol_curve
    set TE1 = #{te1,jdbcType=REAL},
      TE2 = #{te2,jdbcType=REAL},
      TE3 = #{te3,jdbcType=REAL},
      TE4 = #{te4,jdbcType=REAL},
      TAG = #{tag,jdbcType=BIT}
    where temperature = #{temperature,jdbcType=SMALLINT}
  </update>
</mapper>